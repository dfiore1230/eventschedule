name: Build Release

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'Release channel'
        required: true
        type: choice
        default: production
        options:
          - production
          - beta
      major_release:
        description: 'Mark this release as a major version'
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo, sqlite
          tools: composer, npm

      - name: Determine release version
        id: version
        run: |
          MAJOR_FLAG=""

          if [ "${{ github.event.inputs.major_release }}" = "true" ]; then
            MAJOR_FLAG="--major"
          fi

          php scripts/bump-version.php "${{ github.event.inputs.channel }}" $MAJOR_FLAG

      - name: Persist bumped version
        run: |
          if git diff --quiet --exit-code VERSION; then
            echo "VERSION unchanged; skipping commit."
            exit 0
          fi

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add VERSION
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          git push origin HEAD:${GITHUB_REF_NAME}
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-scripts --no-progress --no-dev --optimize-autoloader

      - name: Build assets
        run: | 
          npm install
          npm run build
          
          mkdir public/build/img
          cp public/images/flags.png public/build/img/
          cp public/images/flags@2x.png public/build/img/

      - name: Create Release Build
        run: |
          # Remove unnecessary files
          rm -rf .git .github tests
          rm -f .gitattributes .gitignore phpunit.xml

          # Create zip file
          zip -r eventschedule.zip .

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: ${{ steps.version.outputs.prerelease == 'true' }}
          make_latest: ${{ steps.version.outputs.channel == 'beta' && 'legacy' || 'true' }}
          name: "${{ steps.version.outputs.channel == 'beta' && 'Beta Release' || 'Latest Release' }}"
          tag_name: "${{ steps.version.outputs.version }}"
          files: |
            eventschedule.zip
